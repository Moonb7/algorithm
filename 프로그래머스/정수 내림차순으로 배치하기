public class Solution {
    public long solution(long n)
    {
        string answer = "";
        string s = n.ToString();
        long[] arr = new long[s.Length];
        for (int i = 0; i < arr.Length; i++)
        {
             arr[i] = int.Parse(s[i].ToString());
        }

        for (int i = 0; i < arr.Length; i++)
        {
            for (int j = 0; j < arr.Length-1; j++)
            {
                if(arr[j] < arr[j + 1])
                {
                    long temp = arr[j + 1];
                    arr[j + 1] = arr[j];
                    arr[j] = temp;
                }
            }
        }
    
        for (int i = 0; i < arr.Length; i++)
        {
            answer += arr[i].ToString();
        }

        return long.Parse(answer);
    }
}

오늘은 집중도 잘 안되는 것 같았다 내림차순 정렬할때 갑자기 머리가 멍해지면서 겨우 해법을 찾아 작성하였다.

다른 사람들의 코드를 보니 훨씬 코드를 간편하게 써내려가는 것을 보고 아 저런 함수도 있는구나 라이브러리를 잘 활용해야겠다. 다시 한번 생각이 들었다
항상 모르면 구글링과 여러 api라이브러리를 활용하자 이미 누군가는 고민한 부분은 함수로 나와있을 것 이다.

1. 다른 풀이
public long solution(long n) {
        long answer = long.Parse(n.ToString().OrderByDescending(c => (int)c).ToArray());
        return answer;
    }

2. 다른 풀이
public class Solution {
    public long solution(long n) {
        long answer = 0;
        char[] a = n.ToString().ToCharArray();
        System.Array.Sort(a);
        System.Array.Reverse(a);
        answer = System.Convert.ToInt64(new string(a));
        return answer;
    }
}
