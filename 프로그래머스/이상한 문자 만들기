function solution(s) {
    let answer = '';
    let strArray = s.split(' '); // 행렬같이 다차원 배열로 만들수도 있나? 음 일단ㄱ
    for(let i = 0; i < strArray.length; i++)
    {
        let wordArray = strArray[i].split(''); // 각 단어별로 또 배열을 만들어 준다.
        
        for(let j = 0; j < wordArray.length; j++) // 단어 배열요소마다 순서를 알수 있게 반복해준다.
        {
            if(j % 2 == 0)
            {
                wordArray[j] = wordArray[j].toUpperCase(); // 대문자 만들기
            }
            else
            {
                wordArray[j] = wordArray[j].toLowerCase(); // 소문자 만들기
            }
        }
        strArray[i] = wordArray.join(''); // 각 요소들 합쳐서 하나의 문자열을 만들어 단어 완성
    }
    
    console.log(strArray);
    answer = strArray.join(' '); // 각 단어별로 띄어쓰기 해서 문자열을 이루도록 했다.
    return answer;
}

다른 분들
function toWeirdCase(s){
  //함수를 완성해주세요
  return s.toUpperCase().replace(/(\w)(\w)/g, function(a){return a[0].toUpperCase()+a[1].toLowerCase();}) // 뭔가 정규식을 쓰면서 저는 아직 이게 더욱 어색하네요 아직 함수와 정규식에 대해 알아야 겠습니다.!
}


c#
 public static string Solution(string s)
    {
        string answer = "";
        string[] strArray = s.Split(' '); // 단어를 공백 기준으로 나눕니다.
        
        for (int i = 0; i < strArray.Length; i++)
        {
            char[] wordArray = strArray[i].ToCharArray(); // 각 단어를 문자 배열로 나눕니다.
            
            for (int j = 0; j < wordArray.Length; j++)
            {
                if (j % 2 == 0)
                {
                    wordArray[j] = Char.ToUpper(wordArray[j]); // 짝수 인덱스는 대문자로 변환하여 저장합니다.
                }
                else
                {
                    wordArray[j] = Char.ToLower(wordArray[j]); // 홀수 인덱스는 소문자로 변환하여 저장합니다.
                }
            }
            strArray[i] = new string(wordArray); // 변환된 문자를 합쳐서 단어로 만듭니다.
        }
        
        answer = string.Join(" ", strArray); // 단어들을 합쳐서 문장을 만듭니다.
        return answer;
    }
}
